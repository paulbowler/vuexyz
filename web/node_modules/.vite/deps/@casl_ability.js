import "./chunk-J43GMYXM.js";

// node_modules/@ucast/core/dist/es5m/index.js
function t(t15, r3) {
  for (var n2 = 0; n2 < r3.length; n2++) {
    var i3 = r3[n2];
    i3.enumerable = i3.enumerable || false, i3.configurable = true, "value" in i3 && (i3.writable = true), Object.defineProperty(t15, i3.key, i3);
  }
}
function r() {
  return (r = Object.assign || function(t15) {
    for (var r3 = 1; r3 < arguments.length; r3++) {
      var n2 = arguments[r3];
      for (var i3 in n2)
        Object.prototype.hasOwnProperty.call(n2, i3) && (t15[i3] = n2[i3]);
    }
    return t15;
  }).apply(this, arguments);
}
function n(t15, r3) {
  t15.prototype = Object.create(r3.prototype), t15.prototype.constructor = t15, t15.__proto__ = r3;
}
var i = function() {
  function r3(t15, r4) {
    this.operator = t15, this.value = r4, Object.defineProperty(this, "t", { writable: true });
  }
  var n2, i3, e3;
  return r3.prototype.addNote = function(t15) {
    this.t = this.t || [], this.t.push(t15);
  }, n2 = r3, (i3 = [{ key: "notes", get: function() {
    return this.t;
  } }]) && t(n2.prototype, i3), e3 && t(n2, e3), r3;
}();
var e = function(t15) {
  function r3() {
    return t15.apply(this, arguments) || this;
  }
  return n(r3, t15), r3;
}(i);
var o = function(t15) {
  function r3(r4, n2) {
    if (!Array.isArray(n2))
      throw new Error('"' + r4 + '" operator expects to receive an array of conditions');
    return t15.call(this, r4, n2) || this;
  }
  return n(r3, t15), r3;
}(e);
var u = "__itself__";
var f = function(t15) {
  function r3(r4, n2, i3) {
    var e3;
    return (e3 = t15.call(this, r4, i3) || this).field = n2, e3;
  }
  return n(r3, t15), r3;
}(i);
var a = new e("__null__", null);
var c = Object.prototype.hasOwnProperty.call.bind(Object.prototype.hasOwnProperty);
function s(t15, r3) {
  return r3 instanceof o && r3.operator === t15;
}
function h(t15, r3) {
  return 1 === r3.length ? r3[0] : new o(t15, function t16(r4, n2, i3) {
    for (var e3 = i3 || [], o3 = 0, u4 = n2.length; o3 < u4; o3++) {
      var f4 = n2[o3];
      s(r4, f4) ? t16(r4, f4.value, e3) : e3.push(f4);
    }
    return e3;
  }(t15, r3));
}
var v = function(t15) {
  return t15;
};
var d = function() {
  return /* @__PURE__ */ Object.create(null);
};
var l = Object.defineProperty(d(), "__@type@__", { value: "ignore value" });
function p(t15, r3, n2) {
  if (void 0 === n2 && (n2 = false), !t15 || t15 && t15.constructor !== Object)
    return false;
  for (var i3 in t15) {
    if (c(t15, i3) && c(r3, i3) && (!n2 || t15[i3] !== l))
      return true;
  }
  return false;
}
function w(t15) {
  var r3 = [];
  for (var n2 in t15)
    c(t15, n2) && t15[n2] !== l && r3.push(n2);
  return r3;
}
function b(t15, r3) {
  r3 !== a && t15.push(r3);
}
var y = function(t15) {
  return h("and", t15);
};
var j = { compound: function(t15, r3, n2) {
  var i3 = (Array.isArray(r3) ? r3 : [r3]).map(function(t16) {
    return n2.parse(t16);
  });
  return new o(t15.name, i3);
}, field: function(t15, r3, n2) {
  return new f(t15.name, n2.field, r3);
}, document: function(t15, r3) {
  return new e(t15.name, r3);
} };
var _ = function() {
  function t15(t16, n3) {
    var i3 = this;
    void 0 === n3 && (n3 = d()), this.i = void 0, this.o = void 0, this.u = void 0, this.s = void 0, this.h = void 0, this.parse = this.parse.bind(this), this.s = { operatorToConditionName: n3.operatorToConditionName || v, defaultOperatorName: n3.defaultOperatorName || "eq", mergeFinalConditions: n3.mergeFinalConditions || y }, this.i = Object.keys(t16).reduce(function(n4, e3) {
      return n4[e3] = r({ name: i3.s.operatorToConditionName(e3) }, t16[e3]), n4;
    }, {}), this.o = r({}, n3.fieldContext, { field: "", query: {}, parse: this.parse, hasOperators: function(t17) {
      return p(t17, i3.i, n3.useIgnoreValue);
    } }), this.u = r({}, n3.documentContext, { parse: this.parse, query: {} }), this.h = n3.useIgnoreValue ? w : Object.keys;
  }
  var n2 = t15.prototype;
  return n2.setParse = function(t16) {
    this.parse = t16, this.o.parse = t16, this.u.parse = t16;
  }, n2.parseField = function(t16, r3, n3, i3) {
    var e3 = this.i[r3];
    if (!e3)
      throw new Error('Unsupported operator "' + r3 + '"');
    if ("field" !== e3.type)
      throw new Error("Unexpected " + e3.type + ' operator "' + r3 + '" at field level');
    return this.o.field = t16, this.o.query = i3, this.parseInstruction(e3, n3, this.o);
  }, n2.parseInstruction = function(t16, r3, n3) {
    return "function" == typeof t16.validate && t16.validate(t16, r3), (t16.parse || j[t16.type])(t16, r3, n3);
  }, n2.parseFieldOperators = function(t16, r3) {
    for (var n3 = [], i3 = this.h(r3), e3 = 0, o3 = i3.length; e3 < o3; e3++) {
      var u4 = i3[e3];
      if (!this.i[u4])
        throw new Error('Field query for "' + t16 + '" may contain only operators or a plain object as a value');
      b(n3, this.parseField(t16, u4, r3[u4], r3));
    }
    return n3;
  }, n2.parse = function(t16) {
    var r3 = [], n3 = this.h(t16);
    this.u.query = t16;
    for (var i3 = 0, e3 = n3.length; i3 < e3; i3++) {
      var o3 = n3[i3], u4 = t16[o3], f4 = this.i[o3];
      if (f4) {
        if ("document" !== f4.type && "compound" !== f4.type)
          throw new Error('Cannot use parsing instruction for operator "' + o3 + '" in "document" context as it is supposed to be used in  "' + f4.type + '" context');
        b(r3, this.parseInstruction(f4, u4, this.u));
      } else
        this.o.hasOperators(u4) ? r3.push.apply(r3, this.parseFieldOperators(o3, u4)) : b(r3, this.parseField(o3, this.s.defaultOperatorName, u4, t16));
    }
    return this.s.mergeFinalConditions(r3);
  }, t15;
}();
function m(t15, r3) {
  var n2 = t15[r3];
  if ("function" != typeof n2)
    throw new Error('Unable to interpret "' + r3 + '" condition. Did you forget to register interpreter for it?');
  return n2;
}
function g(t15) {
  return t15.operator;
}
function E(t15, n2) {
  var i3, e3 = n2, o3 = e3 && e3.getInterpreterName || g;
  switch (e3 ? e3.numberOfArguments : 0) {
    case 1:
      i3 = function(r3) {
        var n3 = o3(r3, e3);
        return m(t15, n3)(r3, u4);
      };
      break;
    case 3:
      i3 = function(r3, n3, i4) {
        var f4 = o3(r3, e3);
        return m(t15, f4)(r3, n3, i4, u4);
      };
      break;
    default:
      i3 = function(r3, n3) {
        var i4 = o3(r3, e3);
        return m(t15, i4)(r3, n3, u4);
      };
  }
  var u4 = r({}, e3, { interpret: i3 });
  return u4.interpret;
}
function x(t15, r3) {
  return function(n2) {
    for (var i3 = arguments.length, e3 = new Array(i3 > 1 ? i3 - 1 : 0), o3 = 1; o3 < i3; o3++)
      e3[o3 - 1] = arguments[o3];
    var u4 = t15.apply(void 0, [n2].concat(e3)), f4 = r3.bind(null, u4);
    return f4.ast = u4, f4;
  };
}
var q = _.prototype.parseInstruction;

// node_modules/@ucast/mongo/dist/es5m/index.js
function f2(e3, t15) {
  if (!Array.isArray(t15))
    throw new Error('"' + e3.name + '" expects value to be an array');
}
function u2(e3, t15) {
  if (f2(e3, t15), !t15.length)
    throw new Error('"' + e3.name + '" expects to have at least one element in array');
}
var c2 = function(e3) {
  return function(t15, r3) {
    if (typeof r3 !== e3)
      throw new Error('"' + t15.name + '" expects value to be a "' + e3 + '"');
  };
};
var p2 = { type: "compound", validate: u2, parse: function(t15, r3, n2) {
  var o3 = n2.parse, a4 = r3.map(function(e3) {
    return o3(e3);
  });
  return h(t15.name, a4);
} };
var s2 = p2;
var l2 = { type: "compound", validate: u2 };
var d2 = { type: "field", validate: function(e3, t15) {
  if (!(t15 && (t15 instanceof RegExp || t15.constructor === Object)))
    throw new Error('"' + e3.name + '" expects to receive either regular expression or object of field operators');
}, parse: function(e3, n2, o3) {
  var a4 = n2 instanceof RegExp ? new f("regex", o3.field, n2) : o3.parse(n2, o3);
  return new o(e3.name, [a4]);
} };
var v2 = { type: "field", validate: function(e3, t15) {
  if (!t15 || t15.constructor !== Object)
    throw new Error('"' + e3.name + '" expects to receive an object with nested query or field level operators');
}, parse: function(e3, r3, o3) {
  var a4 = o3.parse, i3 = o3.field, f4 = (0, o3.hasOperators)(r3) ? a4(r3, { field: u }) : a4(r3);
  return new f(e3.name, i3, f4);
} };
var w2 = { type: "field", validate: c2("number") };
var y2 = { type: "field", validate: f2 };
var $ = y2;
var x2 = y2;
var h2 = { type: "field", validate: function(e3, t15) {
  if (!Array.isArray(t15) || 2 !== t15.length)
    throw new Error('"' + e3.name + '" expects an array with 2 numeric elements');
} };
var m2 = { type: "field", validate: c2("boolean") };
var g2 = { type: "field", validate: function(e3, t15) {
  if (!("string" == typeof t15 || "number" == typeof t15 || t15 instanceof Date))
    throw new Error('"' + e3.name + '" expects value to be comparable (i.e., string, number or date)');
} };
var b2 = g2;
var E2 = b2;
var j2 = b2;
var O = { type: "field" };
var R = O;
var _2 = { type: "field", validate: function(e3, t15) {
  if (!(t15 instanceof RegExp) && "string" != typeof t15)
    throw new Error('"' + e3.name + '" expects value to be a regular expression or a string that represents regular expression');
}, parse: function(e3, r3, n2) {
  var o3 = "string" == typeof r3 ? new RegExp(r3, n2.query.$options || "") : r3;
  return new f(e3.name, n2.field, o3);
} };
var q2 = { type: "field", parse: function() {
  return a;
} };
var A = { type: "document", validate: c2("function") };
var N = Object.freeze({ __proto__: null, $and: p2, $or: s2, $nor: l2, $not: d2, $elemMatch: v2, $size: w2, $in: y2, $nin: $, $all: x2, $mod: h2, $exists: m2, $gte: g2, $gt: b2, $lt: E2, $lte: j2, $eq: O, $ne: R, $regex: _2, $options: q2, $where: A });
var P = function(e3) {
  var t15, r3;
  function n2(t16) {
    return e3.call(this, t16, { defaultOperatorName: "$eq", operatorToConditionName: function(e4) {
      return e4.slice(1);
    } }) || this;
  }
  return r3 = e3, (t15 = n2).prototype = Object.create(r3.prototype), t15.prototype.constructor = t15, t15.__proto__ = r3, n2.prototype.parse = function(t16, r4) {
    return r4 && r4.field ? y(this.parseFieldOperators(r4.field, t16)) : e3.prototype.parse.call(this, t16);
  }, n2;
}(_);
var z = N;

// node_modules/@ucast/js/dist/es5m/index.js
function t2(r3, n2, t15) {
  for (var u4 = 0, e3 = r3.length; u4 < e3; u4++)
    if (0 === t15(r3[u4], n2))
      return true;
  return false;
}
function u3(r3, n2) {
  return Array.isArray(r3) && Number.isNaN(Number(n2));
}
function e2(r3, n2, t15) {
  if (!u3(r3, n2))
    return t15(r3, n2);
  for (var e3 = [], o3 = 0; o3 < r3.length; o3++) {
    var i3 = t15(r3[o3], n2);
    void 0 !== i3 && (e3 = e3.concat(i3));
  }
  return e3;
}
function o2(r3) {
  return function(n2, t15, u4) {
    var e3 = u4.get(t15, n2.field);
    return Array.isArray(e3) ? e3.some(function(t16) {
      return r3(n2, t16, u4);
    }) : r3(n2, e3, u4);
  };
}
function i2() {
  return (i2 = Object.assign || function(r3) {
    for (var n2 = 1; n2 < arguments.length; n2++) {
      var t15 = arguments[n2];
      for (var u4 in t15)
        Object.prototype.hasOwnProperty.call(t15, u4) && (r3[u4] = t15[u4]);
    }
    return r3;
  }).apply(this, arguments);
}
var f3 = function(r3, n2) {
  return r3[n2];
};
function c3(r3, n2, t15) {
  var u4 = n2.lastIndexOf(".");
  return -1 === u4 ? [r3, n2] : [t15(r3, n2.slice(0, u4)), n2.slice(u4 + 1)];
}
function a2(n2, t15, u4) {
  if (void 0 === u4 && (u4 = f3), t15 === u)
    return n2;
  if (!n2)
    throw new Error('Unable to get field "' + t15 + '" out of ' + String(n2) + ".");
  return function(r3, n3, t16) {
    if (-1 === n3.indexOf("."))
      return e2(r3, n3, t16);
    for (var u5 = n3.split("."), o3 = r3, i3 = 0, f4 = u5.length; i3 < f4; i3++)
      if (!(o3 = e2(o3, u5[i3], t16)) || "object" != typeof o3)
        return o3;
    return o3;
  }(n2, t15, u4);
}
function y3(r3, n2) {
  return r3 === n2 ? 0 : r3 > n2 ? 1 : -1;
}
function l3(r3, t15) {
  return void 0 === t15 && (t15 = {}), E(r3, i2({ get: a2, compare: y3 }, t15));
}
var b3 = function(r3, n2, t15) {
  var u4 = t15.interpret;
  return r3.value.some(function(r4) {
    return u4(r4, n2);
  });
};
var m3 = function(r3, n2, t15) {
  return !b3(r3, n2, t15);
};
var d3 = function(r3, n2, t15) {
  var u4 = t15.interpret;
  return r3.value.every(function(r4) {
    return u4(r4, n2);
  });
};
var g3 = function(r3, n2, t15) {
  return !(0, t15.interpret)(r3.value[0], n2);
};
var p3 = function(r3, n2, u4) {
  var e3 = u4.compare, o3 = (0, u4.get)(n2, r3.field);
  return Array.isArray(o3) && !Array.isArray(r3.value) ? t2(o3, r3.value, e3) : 0 === e3(o3, r3.value);
};
var A2 = function(r3, n2, t15) {
  return !p3(r3, n2, t15);
};
var s3 = o2(function(r3, n2, t15) {
  var u4 = t15.compare(n2, r3.value);
  return 0 === u4 || -1 === u4;
});
var h3 = o2(function(r3, n2, t15) {
  return -1 === t15.compare(n2, r3.value);
});
var j3 = o2(function(r3, n2, t15) {
  return 1 === t15.compare(n2, r3.value);
});
var w3 = o2(function(r3, n2, t15) {
  var u4 = t15.compare(n2, r3.value);
  return 0 === u4 || 1 === u4;
});
var _3 = function(n2, t15, e3) {
  var o3 = e3.get;
  if (n2.field === u)
    return void 0 !== t15;
  var i3 = c3(t15, n2.field, o3), f4 = i3[0], a4 = i3[1], v4 = function(r3) {
    return !!r3 && r3.hasOwnProperty(a4) === n2.value;
  };
  return u3(f4, a4) ? f4.some(v4) : v4(f4);
};
var x3 = o2(function(r3, n2) {
  return "number" == typeof n2 && n2 % r3.value[0] === r3.value[1];
});
var O2 = function(n2, t15, e3) {
  var o3 = e3.get, i3 = c3(t15, n2.field, o3), f4 = i3[0], a4 = i3[1], v4 = function(r3) {
    var t16 = o3(r3, a4);
    return Array.isArray(t16) && t16.length === n2.value;
  };
  return n2.field !== u && u3(f4, a4) ? f4.some(v4) : v4(f4);
};
var N2 = o2(function(r3, n2) {
  return "string" == typeof n2 && r3.value.test(n2);
});
var q3 = o2(function(r3, n2, u4) {
  var e3 = u4.compare;
  return t2(r3.value, n2, e3);
});
var z2 = function(r3, n2, t15) {
  return !q3(r3, n2, t15);
};
var E3 = function(r3, n2, u4) {
  var e3 = u4.compare, o3 = (0, u4.get)(n2, r3.field);
  return Array.isArray(o3) && r3.value.every(function(r4) {
    return t2(o3, r4, e3);
  });
};
var M = function(r3, n2, t15) {
  var u4 = t15.interpret, e3 = (0, t15.get)(n2, r3.field);
  return Array.isArray(e3) && e3.some(function(n3) {
    return u4(r3.value, n3);
  });
};
var S = function(r3, n2) {
  return r3.value.call(n2);
};
var U = i2({}, Object.freeze({ __proto__: null, or: b3, nor: m3, and: d3, not: g3, eq: p3, ne: A2, lte: s3, lt: h3, gt: j3, gte: w3, exists: _3, mod: x3, size: O2, regex: N2, within: q3, nin: z2, all: E3, elemMatch: M, where: S }), { in: q3 });
var k = l3(U);

// node_modules/@ucast/mongo2js/dist/es5m/index.js
function c4() {
  return (c4 = Object.assign || function(r3) {
    for (var t15 = 1; t15 < arguments.length; t15++) {
      var o3 = arguments[t15];
      for (var n2 in o3)
        Object.prototype.hasOwnProperty.call(o3, n2) && (r3[n2] = o3[n2]);
    }
    return r3;
  }).apply(this, arguments);
}
function a3(r3) {
  return r3 instanceof Date ? r3.getTime() : r3 && "function" == typeof r3.toJSON ? r3.toJSON() : r3;
}
var m4 = function(r3, t15) {
  return y3(a3(r3), a3(t15));
};
function p4(n2, e3, i3) {
  var u4 = new P(n2), a4 = l3(e3, c4({ compare: m4 }, i3));
  if (i3 && i3.forPrimitives) {
    var p5 = { field: u }, s5 = u4.parse;
    u4.setParse(function(r3) {
      return s5(r3, p5);
    });
  }
  return x(u4.parse, a4);
}
var s4 = p4(z, U);
var v3 = p4(["$and", "$or"].reduce(function(r3, t15) {
  return r3[t15] = c4({}, r3[t15], { type: "field" }), r3;
}, c4({}, z, { $nor: c4({}, z.$nor, { type: "field", parse: j.compound }) })), U, { forPrimitives: true });

// node_modules/@casl/ability/dist/es5m/index.js
function _4(t15, r3) {
  for (var i3 = 0; i3 < r3.length; i3++) {
    var n2 = r3[i3];
    n2.enumerable = n2.enumerable || false;
    n2.configurable = true;
    if ("value" in n2)
      n2.writable = true;
    Object.defineProperty(t15, n2.key, n2);
  }
}
function C(t15, r3, i3) {
  if (r3)
    _4(t15.prototype, r3);
  if (i3)
    _4(t15, i3);
  return t15;
}
function P2() {
  P2 = Object.assign || function(t15) {
    for (var r3 = 1; r3 < arguments.length; r3++) {
      var i3 = arguments[r3];
      for (var n2 in i3)
        if (Object.prototype.hasOwnProperty.call(i3, n2))
          t15[n2] = i3[n2];
    }
    return t15;
  };
  return P2.apply(this, arguments);
}
function R2(t15, r3) {
  t15.prototype = Object.create(r3.prototype);
  t15.prototype.constructor = t15;
  k2(t15, r3);
}
function k2(t15, r3) {
  k2 = Object.setPrototypeOf || function t16(r4, i3) {
    r4.__proto__ = i3;
    return r4;
  };
  return k2(t15, r3);
}
function B(t15) {
  if (void 0 === t15)
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  return t15;
}
function T(t15) {
  return Array.isArray(t15) ? t15 : [t15];
}
var q4 = Object.hasOwn || Object.prototype.hasOwnProperty.call.bind(Object.prototype.hasOwnProperty);
var z3 = "__caslSubjectType__";
function S2(t15, r3) {
  if (r3) {
    if (!q4(r3, z3))
      Object.defineProperty(r3, z3, { value: t15 });
    else if (t15 !== r3[z3])
      throw new Error("Trying to cast object to subject type " + t15 + " but previously it was casted to " + r3[z3]);
  }
  return r3;
}
var Y = function t3(r3) {
  var i3 = typeof r3;
  return "string" === i3 || "function" === i3;
};
var D = function t4(r3) {
  return r3.modelName || r3.name;
};
var L = function t5(r3) {
  return "string" === typeof r3 ? r3 : D(r3);
};
function G(t15) {
  if (q4(t15, z3))
    return t15[z3];
  return D(t15.constructor);
}
function H(t15, r3, i3) {
  var n2 = T(r3);
  var e3 = 0;
  while (e3 < n2.length) {
    var u4 = n2[e3++];
    if (q4(t15, u4))
      n2 = i3(n2, t15[u4]);
  }
  return n2;
}
function I(t15, r3) {
  if ("string" === typeof r3 && -1 !== t15.indexOf(r3))
    return r3;
  for (var i3 = 0; i3 < r3.length; i3++)
    if (-1 !== t15.indexOf(r3[i3]))
      return r3[i3];
  return null;
}
var J = function t6(r3, i3) {
  return r3.concat(i3);
};
function K(t15, r3) {
  if (r3 in t15)
    throw new Error('Cannot use "' + r3 + `" as an alias because it's reserved action.`);
  var i3 = Object.keys(t15);
  var n2 = function t16(i4, n3) {
    var e4 = I(i4, n3);
    if (e4)
      throw new Error("Detected cycle " + e4 + " -> " + i4.join(", "));
    var u4 = "string" === typeof n3 && n3 === r3 || -1 !== i4.indexOf(r3) || Array.isArray(n3) && -1 !== n3.indexOf(r3);
    if (u4)
      throw new Error('Cannot make an alias to "' + r3 + '" because this is reserved action');
    return i4.concat(n3);
  };
  for (var e3 = 0; e3 < i3.length; e3++)
    H(t15, i3[e3], n2);
}
function N3(t15, r3) {
  if (!r3 || false !== r3.skipValidate)
    K(t15, r3 && r3.anyAction || "manage");
  return function(r4) {
    return H(t15, r4, J);
  };
}
function Q(t15, r3, i3) {
  for (var n2 = i3; n2 < r3.length; n2++)
    t15.push(r3[n2]);
}
function U2(t15, r3) {
  if (!t15 || !t15.length)
    return r3 || [];
  if (!r3 || !r3.length)
    return t15 || [];
  var i3 = 0;
  var n2 = 0;
  var e3 = [];
  while (i3 < t15.length && n2 < r3.length)
    if (t15[i3].priority < r3[n2].priority) {
      e3.push(t15[i3]);
      i3++;
    } else {
      e3.push(r3[n2]);
      n2++;
    }
  Q(e3, t15, i3);
  Q(e3, r3, n2);
  return e3;
}
function V(t15, r3, i3) {
  var n2 = t15.get(r3);
  if (!n2) {
    n2 = i3();
    t15.set(r3, n2);
  }
  return n2;
}
var W = function t7(r3) {
  return r3;
};
function X(t15, r3) {
  if (Array.isArray(t15.fields) && !t15.fields.length)
    throw new Error("`rawRule.fields` cannot be an empty array. https://bit.ly/390miLa");
  if (t15.fields && !r3.fieldMatcher)
    throw new Error('You need to pass "fieldMatcher" option in order to restrict access by fields');
  if (t15.conditions && !r3.conditionsMatcher)
    throw new Error('You need to pass "conditionsMatcher" option in order to restrict access by conditions');
}
var Z = function() {
  function t15(t16, r4, i3) {
    if (void 0 === i3)
      i3 = 0;
    X(t16, r4);
    this.action = r4.resolveAction(t16.action);
    this.subject = t16.subject;
    this.inverted = !!t16.inverted;
    this.conditions = t16.conditions;
    this.reason = t16.reason;
    this.fields = t16.fields ? T(t16.fields) : void 0;
    this.priority = i3;
    this.t = r4;
  }
  var r3 = t15.prototype;
  r3.i = function t16() {
    if (this.conditions && !this.u)
      this.u = this.t.conditionsMatcher(this.conditions);
    return this.u;
  };
  r3.matchesConditions = function t16(r4) {
    if (!this.conditions)
      return true;
    if (!r4 || Y(r4))
      return !this.inverted;
    var i3 = this.i();
    return i3(r4);
  };
  r3.matchesField = function t16(r4) {
    if (!this.fields)
      return true;
    if (!r4)
      return !this.inverted;
    if (this.fields && !this.o)
      this.o = this.t.fieldMatcher(this.fields);
    return this.o(r4);
  };
  C(t15, [{ key: "ast", get: function t16() {
    var r4 = this.i();
    return r4 ? r4.ast : void 0;
  } }]);
  return t15;
}();
function tt(t15, r3) {
  var i3 = { value: t15, prev: r3, next: null };
  if (r3)
    r3.next = i3;
  return i3;
}
function rt(t15) {
  if (t15.next)
    t15.next.prev = t15.prev;
  if (t15.prev)
    t15.prev.next = t15.next;
  t15.next = t15.prev = null;
}
var it = function t8(r3) {
  return { value: r3.value, prev: r3.prev, next: r3.next };
};
var nt = function t9() {
  return { rules: [], merged: false };
};
var et = function t10() {
  return /* @__PURE__ */ new Map();
};
var ut = function t11(r3, i3) {
  if (!r3.h && i3.fields)
    r3.h = true;
};
var ot = function() {
  function t15(t16, r4) {
    if (void 0 === t16)
      t16 = [];
    if (void 0 === r4)
      r4 = {};
    this.h = false;
    this.v = /* @__PURE__ */ new Map();
    this.l = { conditionsMatcher: r4.conditionsMatcher, fieldMatcher: r4.fieldMatcher, resolveAction: r4.resolveAction || W };
    this.p = r4.anyAction || "manage";
    this.g = r4.anySubjectType || "all";
    this.A = r4.detectSubjectType || G;
    this.j = t16;
    this.$ = this.M(t16);
  }
  var r3 = t15.prototype;
  r3.detectSubjectType = function t16(r4) {
    if (Y(r4))
      return r4;
    if (!r4)
      return this.g;
    return this.A(r4);
  };
  r3.update = function t16(r4) {
    var i3 = { rules: r4, ability: this, target: this };
    this.m("update", i3);
    this.j = r4;
    this.$ = this.M(r4);
    this.m("updated", i3);
    return this;
  };
  r3.M = function t16(r4) {
    var i3 = /* @__PURE__ */ new Map();
    for (var n2 = r4.length - 1; n2 >= 0; n2--) {
      var e3 = r4.length - n2 - 1;
      var u4 = new Z(r4[n2], this.l, e3);
      var o3 = T(u4.action);
      var s5 = T(u4.subject || this.g);
      ut(this, u4);
      for (var f4 = 0; f4 < s5.length; f4++) {
        var a4 = V(i3, s5[f4], et);
        for (var c5 = 0; c5 < o3.length; c5++)
          V(a4, o3[c5], nt).rules.push(u4);
      }
    }
    return i3;
  };
  r3.possibleRulesFor = function t16(r4, i3) {
    if (void 0 === i3)
      i3 = this.g;
    if (!Y(i3))
      throw new Error('"possibleRulesFor" accepts only subject types (i.e., string or class) as the 2nd parameter');
    var n2 = V(this.$, i3, et);
    var e3 = V(n2, r4, nt);
    if (e3.merged)
      return e3.rules;
    var u4 = r4 !== this.p && n2.has(this.p) ? n2.get(this.p).rules : void 0;
    var o3 = U2(e3.rules, u4);
    if (i3 !== this.g)
      o3 = U2(o3, this.possibleRulesFor(r4, this.g));
    e3.rules = o3;
    e3.merged = true;
    return o3;
  };
  r3.rulesFor = function t16(r4, i3, n2) {
    var e3 = this.possibleRulesFor(r4, i3);
    if (n2 && "string" !== typeof n2)
      throw new Error("The 3rd, `field` parameter is expected to be a string. See https://stalniy.github.io/casl/en/api/casl-ability#can-of-pure-ability for details");
    if (!this.h)
      return e3;
    return e3.filter(function(t17) {
      return t17.matchesField(n2);
    });
  };
  r3.on = function t16(r4, i3) {
    var n2 = this;
    var e3 = this.v.get(r4) || null;
    var u4 = tt(i3, e3);
    this.v.set(r4, u4);
    return function() {
      var t17 = n2.v.get(r4);
      if (!u4.next && !u4.prev && t17 === u4)
        n2.v.delete(r4);
      else if (u4 === t17)
        n2.v.set(r4, u4.prev);
      rt(u4);
    };
  };
  r3.m = function t16(r4, i3) {
    var n2 = this.v.get(r4) || null;
    while (null !== n2) {
      var e3 = n2.prev ? it(n2.prev) : null;
      n2.value(i3);
      n2 = e3;
    }
  };
  C(t15, [{ key: "rules", get: function t16() {
    return this.j;
  } }]);
  return t15;
}();
var st = function(t15) {
  R2(PureAbility, t15);
  function PureAbility() {
    return t15.apply(this, arguments) || this;
  }
  var r3 = PureAbility.prototype;
  r3.can = function t16(r4, i3, n2) {
    var e3 = this.relevantRuleFor(r4, i3, n2);
    return !!e3 && !e3.inverted;
  };
  r3.relevantRuleFor = function t16(r4, i3, n2) {
    var e3 = this.detectSubjectType(i3);
    var u4 = this.rulesFor(r4, e3, n2);
    for (var o3 = 0, s5 = u4.length; o3 < s5; o3++)
      if (u4[o3].matchesConditions(i3))
        return u4[o3];
    return null;
  };
  r3.cannot = function t16(r4, i3, n2) {
    return !this.can(r4, i3, n2);
  };
  return PureAbility;
}(ot);
var ft = { $eq: O, $ne: R, $lt: E2, $lte: j2, $gt: b2, $gte: g2, $in: y2, $nin: $, $all: x2, $size: w2, $regex: _2, $options: q2, $elemMatch: v2, $exists: m2 };
var at = { eq: p3, ne: A2, lt: h3, lte: s3, gt: j3, gte: w3, in: q3, nin: z2, all: E3, size: O2, regex: N2, elemMatch: M, exists: _3, and: d3 };
var ct = function r2(i3, n2, e3) {
  return p4(P2({}, ft, i3), P2({}, at, n2), e3);
};
var ht = p4(ft, at);
var vt = /[-/\\^$+?.()|[\]{}]/g;
var lt = /\.?\*+\.?/g;
var dt = /\*+/;
var bt = /\./g;
function yt(t15, r3, i3) {
  var n2 = "*" === i3[0] || "." === t15[0] && "." === t15[t15.length - 1] ? "+" : "*";
  var e3 = -1 === t15.indexOf("**") ? "[^.]" : ".";
  var u4 = t15.replace(bt, "\\$&").replace(dt, e3 + n2);
  return r3 + t15.length === i3.length ? "(?:" + u4 + ")?" : u4;
}
function pt(t15, r3, i3) {
  if ("." === t15 && ("*" === i3[r3 - 1] || "*" === i3[r3 + 1]))
    return t15;
  return "\\" + t15;
}
function wt(t15) {
  var r3 = t15.map(function(t16) {
    return t16.replace(vt, pt).replace(lt, yt);
  });
  var i3 = r3.length > 1 ? "(?:" + r3.join("|") + ")" : r3[0];
  return new RegExp("^" + i3 + "$");
}
var gt = function t12(r3) {
  var i3;
  return function(t15) {
    if ("undefined" === typeof i3)
      i3 = r3.every(function(t16) {
        return -1 === t16.indexOf("*");
      }) ? null : wt(r3);
    return null === i3 ? -1 !== r3.indexOf(t15) : i3.test(t15);
  };
};
var At = function(t15) {
  R2(Ability, t15);
  function Ability(r3, i3) {
    if (void 0 === r3)
      r3 = [];
    if (void 0 === i3)
      i3 = {};
    return t15.call(this, r3, P2({ conditionsMatcher: ht, fieldMatcher: gt }, i3)) || this;
  }
  return Ability;
}(st);
function createMongoAbility(t15, r3) {
  if (void 0 === t15)
    t15 = [];
  if (void 0 === r3)
    r3 = {};
  return new st(t15, P2({ conditionsMatcher: ht, fieldMatcher: gt }, r3));
}
function isAbilityClass(t15) {
  return "function" === typeof t15.prototype.possibleRulesFor;
}
var Et = function() {
  function t15(t16) {
    this.O = t16;
  }
  var r3 = t15.prototype;
  r3.because = function t16(r4) {
    this.O.reason = r4;
    return this;
  };
  return t15;
}();
var jt = function() {
  function AbilityBuilder(t16) {
    this.rules = [];
    this.F = t16;
    this.can = this.can.bind(this);
    this.cannot = this.cannot.bind(this);
    this.build = this.build.bind(this);
  }
  var t15 = AbilityBuilder.prototype;
  t15.can = function t16(r3, i3, n2, e3) {
    var u4 = { action: r3 };
    if (i3) {
      u4.subject = i3;
      if (Array.isArray(n2) || "string" === typeof n2)
        u4.fields = n2;
      else if ("undefined" !== typeof n2)
        u4.conditions = n2;
      if ("undefined" !== typeof e3)
        u4.conditions = e3;
    }
    this.rules.push(u4);
    return new Et(u4);
  };
  t15.cannot = function t16(r3, i3, n2, e3) {
    var u4 = this.can(r3, i3, n2, e3);
    u4.O.inverted = true;
    return u4;
  };
  t15.build = function t16(r3) {
    return isAbilityClass(this.F) ? new this.F(this.rules, r3) : this.F(this.rules, r3);
  };
  return AbilityBuilder;
}();
function defineAbility(t15, r3) {
  var i3 = new jt(createMongoAbility);
  var n2 = t15(i3.can, i3.cannot);
  if (n2 && "function" === typeof n2.then)
    return n2.then(function() {
      return i3.build(r3);
    });
  return i3.build(r3);
}
var $t = function t13(r3) {
  return 'Cannot execute "' + r3.action + '" on "' + r3.subjectType + '"';
};
var Mt = function t14(r3) {
  this.message = r3;
};
Mt.prototype = Object.create(Error.prototype);
var mt = function(t15) {
  R2(ForbiddenError, t15);
  ForbiddenError.setDefaultMessage = function t16(r4) {
    this._ = "string" === typeof r4 ? function() {
      return r4;
    } : r4;
  };
  ForbiddenError.from = function t16(r4) {
    return new this(r4);
  };
  function ForbiddenError(r4) {
    var i3;
    i3 = t15.call(this, "") || this;
    i3.ability = r4;
    if ("function" === typeof Error.captureStackTrace) {
      i3.name = "ForbiddenError";
      Error.captureStackTrace(B(i3), i3.constructor);
    }
    return i3;
  }
  var r3 = ForbiddenError.prototype;
  r3.setMessage = function t16(r4) {
    this.message = r4;
    return this;
  };
  r3.throwUnlessCan = function t16(r4, i3, n2) {
    var e3 = this.unlessCan(r4, i3, n2);
    if (e3)
      throw e3;
  };
  r3.unlessCan = function t16(r4, i3, n2) {
    var e3 = this.ability.relevantRuleFor(r4, i3, n2);
    if (e3 && !e3.inverted)
      return;
    this.action = r4;
    this.subject = i3;
    this.subjectType = L(this.ability.detectSubjectType(i3));
    this.field = n2;
    var u4 = e3 ? e3.reason : "";
    this.message = this.message || u4 || this.constructor._(this);
    return this;
  };
  return ForbiddenError;
}(Mt);
mt._ = $t;
var Ot = Object.freeze({ __proto__: null });
export {
  At as Ability,
  jt as AbilityBuilder,
  mt as ForbiddenError,
  st as PureAbility,
  ct as buildMongoQueryMatcher,
  N3 as createAliasResolver,
  createMongoAbility,
  defineAbility,
  G as detectSubjectType,
  gt as fieldPatternMatcher,
  $t as getDefaultErrorMessage,
  Ot as hkt,
  ht as mongoQueryMatcher,
  S2 as subject,
  T as wrapArray
};
//# sourceMappingURL=@casl_ability.js.map
